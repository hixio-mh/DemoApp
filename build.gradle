import java.nio.charset.StandardCharsets
import java.util.concurrent.TimeUnit

buildscript {
    apply from: "gradle/versions.gradle"
    apply from: "gradle/modules.gradle"

    repositories {
        google()
        gradlePluginPortal()
    }
    dependencies {
        classpath libs.androidGradlePlugin
        classpath libs.kotlinPlugin
        classpath libs.protobufPlugin
        classpath libs.kotlinterPlugin
        classpath libs.dependencyUpdatesPlugin
    }
}

allprojects {
    apply {
        plugin "com.github.ben-manes.versions"
        plugin "org.jmailen.kotlinter"
    }

    repositories {
        google()
        mavenCentral()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://jitpack.io" }
    }

    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor(0, TimeUnit.SECONDS)
            cacheDynamicVersionsFor(0, TimeUnit.SECONDS)
        }
    }
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = StandardCharsets.UTF_8
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

static def isNonStable(String version) {
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}